{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Desktop\\\\REACT Z2M 2020\\\\20.Stripe part II\\\\KC-CLOTHING\\\\client\\\\src\\\\components\\\\sign_up\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport FormInput from '../form_input/FormInput';\nimport CustomButton from '../customButton/CustomButton';\nimport './SignUp.scss';\nimport { signUpStart } from '../../redux/user/userActions';\nimport { connect } from 'react-redux';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('pw and confirm pw doesnt match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, \"I dont have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, \"Sign Up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: \"Display name\",\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: \"Confirm password\",\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Dejan/Desktop/REACT Z2M 2020/20.Stripe part II/KC-CLOTHING/client/src/components/sign_up/SignUp.js"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleChange","event","name","value","target","handleSubmit","preventDefault","alert","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAqB;AAEnC,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CACrD;AACCQ,IAAAA,WAAW,EAAE,EADd;AAECC,IAAAA,KAAK,EAAE,EAFR;AAGCC,IAAAA,QAAQ,EAAE,EAHX;AAICC,IAAAA,eAAe,EAAE;AAJlB,GADqD,CAAtD;AASA,QAAM;AAAEH,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAAoDL,eAA1D;;AAEA,QAAMM,YAAY,GAAGC,KAAK,IAAI;AAC7B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAT,IAAAA,kBAAkB,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACQ,IAAD,GAAQC;AAA9B,KAAD,CAAlB;AACA,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAMJ,KAAN,IAAe;AACnCA,IAAAA,KAAK,CAACK,cAAN;;AAEA,QAAGR,QAAQ,KAAKC,eAAhB,EAAgC;AAC/BQ,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACA;AACA;;AAEDhB,IAAAA,WAAW,CAAC;AAAEK,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB,KAAD,CAAX;AAEA,GAVD;;AAeA,sBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFD,eAGC;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEO,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,IAAI,EAAC,aAAjD;AAA+D,IAAA,KAAK,EAAET,WAAtE;AAAmF,IAAA,QAAQ,MAA3F;AAA4F,IAAA,QAAQ,EAAEI,YAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,OAA9B;AAAsC,IAAA,IAAI,EAAC,OAA3C;AAAmD,IAAA,KAAK,EAAEH,KAA1D;AAAiE,IAAA,QAAQ,MAAzE;AAA0E,IAAA,QAAQ,EAAEG,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAC,UAAjC;AAA4C,IAAA,IAAI,EAAC,UAAjD;AAA4D,IAAA,KAAK,EAAEF,QAAnE;AAA6E,IAAA,QAAQ,MAArF;AAAsF,IAAA,QAAQ,EAAEE,YAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAIC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,kBAAjB;AAAoC,IAAA,IAAI,EAAC,UAAzC;AAAoD,IAAA,IAAI,EAAC,iBAAzD;AAA2E,IAAA,KAAK,EAAED,eAAlF;AAAmG,IAAA,QAAQ,MAA3G;AAA4G,IAAA,QAAQ,EAAEC,YAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,eAMC,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAND,CAHD,CADD;AAiBA,CAlDD;;AAqDA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNlB,IAAAA,WAAW,EAAGG,eAAD,IAAqBe,QAAQ,CAAClB,WAAW,CAACG,eAAD,CAAZ;AADpC,GAAP;AAGA,CAJD;;AAMA,eAAeF,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport FormInput from '../form_input/FormInput';\r\nimport CustomButton from '../customButton/CustomButton';\r\nimport './SignUp.scss';\r\nimport { signUpStart } from '../../redux/user/userActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n\r\n\tconst [userCredentials, setUserCredentials] = useState(\r\n\t\t{\r\n\t\t\tdisplayName: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tconfirmPassword: ''\r\n\t\t}\r\n\t);\r\n\r\n\tconst { displayName, email, password, confirmPassword } = userCredentials; \r\n\r\n\tconst handleChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetUserCredentials({ ...userCredentials, [name]: value });\r\n\t};\r\n\r\n\tconst handleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n        \r\n\t\tif(password !== confirmPassword){\r\n\t\t\talert('pw and confirm pw doesnt match');\r\n\t\t\treturn;\r\n\t\t}\r\n    \r\n\t\tsignUpStart({ displayName, email, password });\r\n        \r\n\t};\r\n\r\n\r\n\r\n    \r\n\treturn (\r\n\t\t<div className=\"sign-up\">\r\n\t\t\t<h2 className=\"title\">I dont have a account</h2>\r\n\t\t\t<span>Sign Up with your email and password</span>\r\n\t\t\t<form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput label=\"Display name\" type=\"text\" name=\"displayName\" value={displayName} required onChange={handleChange} />\r\n\t\t\t\t<FormInput label=\"Email\" type=\"email\" name=\"email\" value={email} required onChange={handleChange} />\r\n\t\t\t\t<FormInput label=\"Password\" type=\"password\" name=\"password\" value={password} required onChange={handleChange} />\r\n\t\t\t\t<FormInput label=\"Confirm password\" type=\"password\" name=\"confirmPassword\" value={confirmPassword} required onChange={handleChange} />\r\n\r\n\t\t\t\t<CustomButton type=\"submit\">Sign Up</CustomButton>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tsignUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}