{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport shopTypes from './shopTypes';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from '../shop/shopActions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(shopTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport default function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/Dejan/Desktop/REACT Z2M 2020/20.Stripe part II/KC-CLOTHING/client/src/redux/shop/shopSagas.js"],"names":["takeLatest","call","put","all","shopTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,yBAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,qBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AAEvC,MAAG;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAa;AACd,UAAMb,GAAG,CAACM,uBAAuB,CAACO,KAAD,CAAxB,CAAT;AAEA;AAED;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACvC,QAAMhB,UAAU,CAACI,SAAS,CAACa,uBAAX,EAAoCR,qBAApC,CAAhB;AACA;AAED,eAAe,UAAUS,SAAV,GAAqB;AACnC,QAAOf,GAAG,CAAC,CAACF,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAV;AACA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\nimport shopTypes from './shopTypes';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from '../shop/shopActions';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n\r\n\ttry{\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\r\n\t} catch (error){\r\n\t\tyield put(fetchCollectionsFailure(error));\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n\tyield takeLatest(shopTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}\r\n\r\nexport default function* shopSagas(){\r\n\tyield (all([call(fetchCollectionsStart)]));\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}