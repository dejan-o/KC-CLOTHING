{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Desktop\\\\REACT Z2M 2020\\\\20.Stripe part II\\\\KC-CLOTHING\\\\client\\\\src\\\\components\\\\sign_in\\\\Sign_in.js\";\nimport React, { useState } from 'react';\nimport './Sign_in.scss';\nimport FormInput from '../form_input/FormInput';\nimport CustomButton from '../customButton/CustomButton';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/userActions';\n\nconst Sign_in = ({\n  signInWithEmail,\n  signInWithGoogle\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const onHandleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const onHandleSubmit = async event => {\n    event.preventDefault();\n    signInWithEmail(email, password);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onHandleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    label: \"Email\",\n    handleChange: onHandleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    handleChange: onHandleChange,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, \"Sing In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: signInWithGoogle,\n    isGoogleSingIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, \"Sing In with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signInWithGoogle: () => dispatch(googleSignInStart()),\n    signInWithEmail: (email, password) => dispatch(emailSignInStart({\n      email,\n      password\n    }))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Sign_in);","map":{"version":3,"sources":["C:/Users/Dejan/Desktop/REACT Z2M 2020/20.Stripe part II/KC-CLOTHING/client/src/components/sign_in/Sign_in.js"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","Sign_in","signInWithEmail","signInWithGoogle","userCredentials","setUserCredentials","email","password","onHandleChange","event","value","name","target","onHandleSubmit","preventDefault","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Sign_in.scss';\r\nimport FormInput from '../form_input/FormInput';\r\nimport CustomButton from '../customButton/CustomButton';\r\nimport { connect } from 'react-redux';\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/userActions';\r\n\r\n\r\nconst Sign_in = ({ signInWithEmail, signInWithGoogle }) => {\r\n\r\n\tconst [userCredentials, setUserCredentials] = useState({ email: '', password: '' });\r\n   \r\n\r\n\tconst { email, password } = userCredentials;\r\n\r\n\tconst onHandleChange = (event) => {\r\n\t\tconst { value, name } = event.target;\r\n\t\tsetUserCredentials({ ...userCredentials, [name]: value });\r\n\t};\r\n\r\n\tconst onHandleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n       \r\n\t\tsignInWithEmail(email, password);\r\n        \r\n\t};\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<div className=\"sign-in\">\r\n\t\t\t<h2>I already have an account</h2>\r\n\t\t\t<span>Sign in with your email and password</span>\r\n\r\n\t\t\t<form onSubmit={onHandleSubmit}>\r\n\t\t\t\t<FormInput \r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\thandleChange={onHandleChange}\r\n\t\t\t\t/>\r\n                   \r\n\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\thandleChange={onHandleChange}\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t/>\r\n                    \r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<CustomButton type=\"submit\">Sing In</CustomButton>\r\n\t\t\t\t\t<CustomButton type=\"button\" onClick={signInWithGoogle} isGoogleSingIn>Sing In with Google</CustomButton>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tsignInWithGoogle: () => dispatch(googleSignInStart()),\r\n\t\tsignInWithEmail: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Sign_in);"]},"metadata":{},"sourceType":"module"}