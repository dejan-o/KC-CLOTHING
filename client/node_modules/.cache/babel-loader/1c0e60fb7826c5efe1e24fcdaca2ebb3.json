{"ast":null,"code":"import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyAC-rmKxi3rvBLU6ggdSK8ySgVMNyuoD9c',\n  authDomain: 'kc-db-937f6.firebaseapp.com',\n  databaseURL: 'https://kc-db-937f6.firebaseio.com',\n  projectId: 'kc-db-937f6',\n  storageBucket: 'kc-db-937f6.appspot.com',\n  messagingSenderId: '1008613810081',\n  appId: '1:1008613810081:web:0b3826ed79ab3dc0b675e0',\n  measurementId: 'G-RW6YETC896'\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(element => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, element);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routename: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, current) => {\n    accumulator[current.title.toLowerCase()] = current;\n    return accumulator;\n  }, {});\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Dejan/Desktop/REACT Z2M 2020/20.Stripe part II/KC-CLOTHING/client/src/firebase/firebase.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","firestore","collection","batch","forEach","element","newDocRef","doc","set","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routename","encodeURI","toLowerCase","id","reduce","accumulator","current","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapShot","get","exists","displayName","email","createdAt","Date","error","console","log","message","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","initializeApp","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n\tapiKey: 'AIzaSyAC-rmKxi3rvBLU6ggdSK8ySgVMNyuoD9c',\r\n\tauthDomain: 'kc-db-937f6.firebaseapp.com',\r\n\tdatabaseURL: 'https://kc-db-937f6.firebaseio.com',\r\n\tprojectId: 'kc-db-937f6',\r\n\tstorageBucket: 'kc-db-937f6.appspot.com',\r\n\tmessagingSenderId: '1008613810081',\r\n\tappId: '1:1008613810081:web:0b3826ed79ab3dc0b675e0',\r\n\tmeasurementId: 'G-RW6YETC896'\r\n};\r\n\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n\tconst collectionRef = firestore.collection(collectionKey);\r\n\r\n\tconst batch = firestore.batch();\r\n\r\n\tobjectsToAdd.forEach(element => {\r\n\t\tconst newDocRef = collectionRef.doc();\r\n\t\tbatch.set(newDocRef, element);\r\n\t});\r\n\r\n\treturn await batch.commit();\r\n\r\n};\r\n\r\n\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n\r\n\tconst transformedCollection = collections.docs.map(doc => {\r\n\t\tconst { title, items } = doc.data();\r\n\t\treturn {\r\n\t\t\troutename: encodeURI(title.toLowerCase()),\r\n\t\t\tid: doc.id,\r\n\t\t\ttitle,\r\n\t\t\titems\r\n\t\t};\r\n\t});\r\n\treturn transformedCollection.reduce( (accumulator, current) => {\r\n\t\taccumulator[current.title.toLowerCase()] = current;\r\n\t\treturn accumulator;\r\n\t}, {} );\r\n};\r\n\r\n\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif(!userAuth)\r\n\t\treturn;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\tconst snapShot = await userRef.get();\r\n\r\n\tif(!snapShot.exists){\r\n\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\t...additionalData\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error creating user', error.message);\r\n\t\t}\r\n\r\n\r\n\t}\r\n  \r\n\treturn userRef;\r\n};\r\n\r\n\r\nexport const getCurrentUser = () => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n\t\t\tunsubscribe();\r\n\t\t\tresolve(userAuth);\r\n\t\t}, reject);\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}